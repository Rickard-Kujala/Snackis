@page
@model Snackis.Pages.Chat.IndexModel
@using Microsoft.AspNetCore.Identity
@using Snackis.Areas.Identity.Data
@inject UserManager<SnackisUser> userManager
@{
    var user = await userManager.GetUserAsync(User);
}

<div class="container" >
    <div class="row "  >
        <div class="card col-8 m-1">
            <h2 class="text-center mt-3">Nya meddelanden</h2>
            @foreach (var group in Model.AllChats.Where(x => x.IsRead == false && x.ReceiverId==user.Id).GroupBy(x => x.SenderId).Select(x => new { SenderId = x.Key, Count = x.Count(), Chats = x.ToList() }))
            {
                <div class="chatcontainer m-1 ">
                    @if (userManager.FindByIdAsync(group.SenderId).Result.Image == null)
                    {
                        <a id="manage" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"><img src="https://bootdey.com/img/Content/avatar/avatar1.png" class="rounded-circle" width="50" height="50" alt="User" /></a>
                    }
                    else
                    {
                        <img src="@("data:image/jpg;base64, " + Convert.ToBase64String((await userManager.FindByIdAsync(group.SenderId)).Image))" class="mr-3 rounded-circle" width="50" height="50" alt="User" />
                    }
                    <a href="?senderid=@group.SenderId">
                        <p>@group.Count olästa meddelanden från @userManager.FindByIdAsync(group.SenderId).Result.NickName</p>
                    </a>
                </div>
            }
        </div>
        <div class="card col 4  m-1 pre-scrollable " style="min-height:75vh" >
            <h2 class="text-center ">Konversationer</h2>
            @foreach (var senderId in Model.AllChats.Where(x => x.ReceiverId == user.Id).GroupBy(x => x.SenderId).Select(x => x.Key).Distinct())
            {
                <div class="chatcontainer m-1">
                    @if (userManager.FindByIdAsync(senderId).Result.Image == null)
                    {
                        <a href="?senderid=@senderId">
                            <img src="https://bootdey.com/img/Content/avatar/avatar1.png" class="rounded-circle" width="50" height="50" alt="User" />
                            <p>@userManager.FindByIdAsync(senderId).Result.NickName</p>
                        </a>
                    }
                    else
                    {
                        <a href="?senderid=@senderId">
                            <img src="@("data:image/jpg;base64, " + Convert.ToBase64String((await userManager.FindByIdAsync(senderId)).Image))" class="mr-3 rounded-circle" width="50" height="50" alt="User" />
                            <p>@userManager.FindByIdAsync(senderId).Result.NickName</p>
                        </a>
                    }
                </div>
            }
            <h2 class="text-center m-1">Gruppchattar</h2>
            @foreach (var groupChatWhereUserIsAdmin in Model.AllChats.Where(x => x.GroupAdminId != null && x.GroupAdminId.ToString() == user.Id))
            {
        <div class="chatcontainer m-1">
            <a href="?groupchatid=@groupChatWhereUserIsAdmin.Id">
                <p>@groupChatWhereUserIsAdmin.GroupChatTitle</p>
            </a>
            @if (userManager.FindByIdAsync(user.Id).Result.Image == null)
            {
                <img src="https://bootdey.com/img/Content/avatar/avatar1.png" class="rounded-circle" width="30" height="30" alt="User" />
            }
            else
            {
                <img src="@("data:image/jpg;base64, " + Convert.ToBase64String((await userManager.FindByIdAsync(user.Id)).Image))" class=" rounded-circle" width="30" height="30" alt="User" />
            }
            @foreach (var member in groupChatWhereUserIsAdmin.GroupMembers.Where(x => x != null))
            {
            @if (userManager.FindByIdAsync(member).Result.Image == null)
            {
                <img src="https://bootdey.com/img/Content/avatar/avatar1.png" class="rounded-circle" width="30" height="30" alt="User" />
            }
            else
            {
                <img src="@("data:image/jpg;base64, " + Convert.ToBase64String((await userManager.FindByIdAsync(member)).Image))" class="rounded-circle" width="30" height="30" alt="User" />
            }
            }
        </div>
            }
            @foreach (var groupChat in Model.AllChats.Where(x => x.GroupMembers != null))
            {
                foreach (var id in groupChat.GroupMembers)
                {
                    if (id == user.Id.ToString())
                    {
                        <div class="chatcontainer m-1">
                            <a href="?groupchatid=@groupChat.Id">
                                <p>@groupChat.GroupChatTitle</p>
                            </a>
                            @if (userManager.FindByIdAsync(id).Result.Image == null)
                            {
                                <img src="https://bootdey.com/img/Content/avatar/avatar1.png" class="rounded-circle" width="30" height="30" alt="User" />
                            }
                            else
                            {
                                <img src="@("data:image/jpg;base64, " + Convert.ToBase64String((await userManager.FindByIdAsync(id)).Image))" class="mr-3 rounded-circle" width="30" height="30" alt="User" />
                            }
                            <p>@groupChat.GroupChatTitle</p>
                        </div>
                    }
                }
            }
            <div class="m-3 pb-1">
                <partial name="_StartNewgroupchatPartial" model="@Model.ChatModel" />
            </div>
        </div>
      </div>
</div>